apiVersion: v1
kind: Pod
metadata:
  name: kubernetes-cedar-authorizer
  namespace: kube-system
spec:
  containers:
  - name: kubernetes-cedar-authorizer
    image: localhost:5002/kubernetes-cedar-authorizer:latest
    imagePullPolicy: Always
    env:
    - name: KUBECONFIG
      value: "/kubernetes-cedar-authorizer/webhook-kubeconfig.yaml"
    - name: TLS_CERT_PATH
      value: "/kubernetes-cedar-authorizer/certs/server.crt"
    - name: TLS_KEY_PATH
      value: "/kubernetes-cedar-authorizer/certs/server.key"
    - name: CEDAR_SCHEMA_FILE
      value: "/kubernetes-cedar-authorizer/e2e.cedarschema"
    - name: CEDAR_POLICY_FILE
      value: "/kubernetes-cedar-authorizer/e2e.cedar"
    livenessProbe:
      failureThreshold: 8
      httpGet:
        host: 127.0.0.1
        path: /healthz
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 15
    readinessProbe:
      failureThreshold: 3
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: 8443
        scheme: HTTPS
      periodSeconds: 1
      timeoutSeconds: 15
    startupProbe:
      failureThreshold: 24
      httpGet:
        host: 127.0.0.1
        path: /readyz
        port: 8443
        scheme: HTTPS
      initialDelaySeconds: 5
      periodSeconds: 10
      timeoutSeconds: 15
    resources:
      limits:
        cpu: 500m
        memory: 256Mi
      requests:
        cpu: 250m
        memory: 128Mi
    volumeMounts:
    - mountPath: /kubernetes-cedar-authorizer
      name: kubernetes-cedar-authorizer
#    - mountPath: /etc/ssl/certs
#      name: ca-certs
#      readOnly: true
  hostNetwork: true
  priority: 2000001000
  priorityClassName: system-node-critical
  securityContext:
    seccompProfile:
      type: RuntimeDefault
  volumes:
  - hostPath:
      path: /kubernetes-cedar-authorizer
      type: Directory
    name: kubernetes-cedar-authorizer
#  - hostPath:
#      path: /etc/ssl/certs
#      type: DirectoryOrCreate
#    name: ca-certs
